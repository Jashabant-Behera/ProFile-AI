{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Jeet/projects/React/ProFile-AI/client/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\nexport const uploadResume = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"resume\", file);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/upload\",\r\n      formData,\r\n      {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Upload Error:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const analyzeResume = async (text) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_BASE_URL}/analyze`,\r\n      { text },\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n    return response.data.analysis;\r\n  } catch (error) {\r\n    console.error(\"AI Analysis Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const generateCoverLetter = async (resumeText) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/cover-letter\",\r\n      { text: resumeText }\r\n    );\r\n    return response.data.coverLetter;\r\n  } catch (error) {\r\n    console.error(\"Error generating cover letter:\", error);\r\n    return null;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;;AACA,MAAM,eAAe;AAEd,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,IAAI;IACrB,SAAS,MAAM,CAAC,UAAU;IAE1B,IAAI;QACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,oCACA,UACA;YACE,SAAS;gBAAE,gBAAgB;YAAsB;QACnD;QAGF,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;IACT;AACF;AAEO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,aAAa,QAAQ,CAAC,EACzB;YAAE;QAAK,GACP;YAAE,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;QAEpD,OAAO,SAAS,IAAI,CAAC,QAAQ;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM;IACR;AACF;AAEO,MAAM,sBAAsB,OAAO;IACxC,IAAI;QACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,0CACA;YAAE,MAAM;QAAW;QAErB,OAAO,SAAS,IAAI,CAAC,WAAW;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Jeet/projects/React/ProFile-AI/client/src/app/upload/components/DownloadButton.js"],"sourcesContent":["export default function DownloadButton({ content, filename }) {\r\n    if (!content) return null;\r\n  \r\n    const handleDownload = () => {\r\n      const file = new Blob([content], { type: \"text/plain\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      const a = document.createElement(\"a\");\r\n      a.href = fileURL;\r\n      a.setAttribute(\"download\", filename);\r\n      a.click();\r\n      URL.revokeObjectURL(fileURL);\r\n    };\r\n  \r\n    return (\r\n      <button onClick={handleDownload} className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded\">\r\n        Download {filename}\r\n      </button>\r\n    );\r\n  }\r\n  "],"names":[],"mappings":";;;;;AAAe,SAAS,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE;IACxD,IAAI,CAAC,SAAS,OAAO;IAErB,MAAM,iBAAiB;QACrB,MAAM,OAAO,IAAI,KAAK;YAAC;SAAQ,EAAE;YAAE,MAAM;QAAa;QACtD,MAAM,UAAU,IAAI,eAAe,CAAC;QACpC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,YAAY,CAAC,YAAY;QAC3B,EAAE,KAAK;QACP,IAAI,eAAe,CAAC;IACtB;IAEA,qBACE,6LAAC;QAAO,SAAS;QAAgB,WAAU;;YAAiD;YAChF;;;;;;;AAGhB;KAlBsB"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Jeet/projects/React/ProFile-AI/client/src/app/upload/components/CoverLetter.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { generateCoverLetter } from \"../../../utils/api\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport DownloadButton from \"./DownloadButton\";\r\n\r\nexport default function CoverLetter({ analysis }) {\r\n  const [coverLetter, setCoverLetter] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleGenerateCoverLetter = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await generateCoverLetter(analysis);\r\n      setCoverLetter(result);\r\n    } catch (error) {\r\n      setCoverLetter(\"Failed to generate cover letter.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6 p-4 bg-gray-100 shadow rounded\">\r\n      <h2 className=\"text-lg font-bold\">Cover Letter</h2>\r\n      {coverLetter ? (\r\n        <>\r\n          <ReactMarkdown className=\"text-sm mt-2\">{coverLetter}</ReactMarkdown>\r\n          <DownloadButton content={coverLetter} filename=\"Cover Letter\" />\r\n        </>\r\n      ) : (\r\n        <button\r\n          onClick={handleGenerateCoverLetter}\r\n          className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? \"Generating...\" : \"Generate Cover Letter\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AADA;;;;;;;AAGe,SAAS,YAAY,EAAE,QAAQ,EAAE;;IAC9C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,4BAA4B;QAChC,aAAa;QACb,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,sHAAA,CAAA,sBAAmB,AAAD,EAAE;YACzC,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,eAAe;QACjB,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAoB;;;;;;YACjC,4BACC;;kCACE,6LAAC,2LAAA,CAAA,UAAa;wBAAC,WAAU;kCAAgB;;;;;;kCACzC,6LAAC,uJAAA,CAAA,UAAc;wBAAC,SAAS;wBAAa,UAAS;;;;;;;6CAGjD,6LAAC;gBACC,SAAS;gBACT,WAAU;gBACV,UAAU;0BAET,YAAY,kBAAkB;;;;;;;;;;;;AAKzC;GAnCwB;KAAA"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Jeet/projects/React/ProFile-AI/client/src/app/upload/components/AIAnalysis.js"],"sourcesContent":["import ReactMarkdown from \"react-markdown\";\r\nimport DownloadButton from \"./DownloadButton\";\r\n\r\nexport default function AIAnalysis({ analysis }) {\r\n  return (\r\n    analysis && (\r\n      <div className=\"mt-6 p-4 bg-blue-100 shadow rounded\">\r\n        <h2 className=\"text-lg font-bold\">AI Feedback</h2>\r\n        <ReactMarkdown className=\"text-sm\">{analysis}</ReactMarkdown>\r\n        <DownloadButton content={analysis} filename=\"AI_Feedback.txt\" />\r\n      </div>\r\n    )\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;;AAGe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,OACE,0BACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAoB;;;;;;0BAClC,6LAAC,2LAAA,CAAA,UAAa;gBAAC,WAAU;0BAAW;;;;;;0BACpC,6LAAC,uJAAA,CAAA,UAAc;gBAAC,SAAS;gBAAU,UAAS;;;;;;;;;;;;AAIpD;KAVwB"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}