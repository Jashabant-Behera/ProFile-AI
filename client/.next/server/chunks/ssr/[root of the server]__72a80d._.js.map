{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Jeet/projects/React/ProFile%20AI/ProFile-AI/client/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\n/**\r\n * Uploads a resume file to the server.\r\n * @param {File} file - The resume file.\r\n * @returns {Promise<Object>} - Response containing file URL and extracted text.\r\n */\r\nexport const uploadResume = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"resume\", file);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/upload\",\r\n      formData,\r\n      {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Upload Error:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Sends extracted resume text for AI analysis.\r\n * @param {string} text - The extracted text from the resume.\r\n * @returns {Promise<string>} - The AI-generated analysis.\r\n */\r\nexport const analyzeResume = async (text) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_BASE_URL}/analyze`,\r\n      { text },\r\n      { headers: { \"Content-Type\": \"application/json\" } }\r\n    );\r\n    return response.data.analysis;\r\n  } catch (error) {\r\n    console.error(\"❌ AI Analysis Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Generates a cover letter based on the AI feedback.\r\n * @param {string} analysis - The AI-generated feedback.\r\n * @returns {Promise<string>} - The AI-generated cover letter.\r\n */\r\nexport const generateCoverLetter = async (resumeText) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/cover-letter\",\r\n      { text: resumeText }\r\n    );\r\n    return response.data.coverLetter;\r\n  } catch (error) {\r\n    console.error(\"Error generating cover letter:\", error);\r\n    return null;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,eAAe;AAOd,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,IAAI;IACrB,SAAS,MAAM,CAAC,UAAU;IAE1B,IAAI;QACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,oCACA,UACA;YACE,SAAS;gBAAE,gBAAgB;YAAsB;QACnD;QAGF,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO;IACT;AACF;AAOO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,aAAa,QAAQ,CAAC,EACzB;YAAE;QAAK,GACP;YAAE,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;QAEpD,OAAO,SAAS,IAAI,CAAC,QAAQ;IAC/B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;AACF;AAOO,MAAM,sBAAsB,OAAO;IACxC,IAAI;QACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,0CACA;YAAE,MAAM;QAAW;QAErB,OAAO,SAAS,IAAI,CAAC,WAAW;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Jeet/projects/React/ProFile%20AI/ProFile-AI/client/src/app/upload/page.js"],"sourcesContent":["// \"use client\";\r\n// import { useState } from \"react\";\r\n// import { uploadResume, analyzeResume, generateCoverLetter } from \"../../utils/api\";\r\n// import \"../../styles/globals.css\";\r\n// import ReactMarkdown from \"react-markdown\";\r\n// import { ClipLoader } from \"react-spinners\";\r\n\r\n// export default function Upload() {\r\n//   const [file, setFile] = useState(null);\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [analysis, setAnalysis] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n//   const [coverLetter, setCoverLetter] = useState(\"\");\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     if (!file) {\r\n//       setMessage(\"Please Select a File First\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setMessage(\"\");\r\n//     setFileUrl(\"\");\r\n//     setAnalysis(\"\");\r\n\r\n//     try {\r\n//       const response = await uploadResume(file);\r\n//       setMessage(response.message);\r\n//       console.log(\"File Uploaded Successfully:\", response);\r\n\r\n//       if (response.fileUrl) setFileUrl(response.fileUrl);\r\n\r\n//       if (response.extractedText) {\r\n//         const aiFeedback = await analyzeResume(response.extractedText);\r\n//         setAnalysis(aiFeedback);\r\n//       }\r\n//     } catch (error) {\r\n//       setMessage(\"Upload Failed. Please Try Again.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDownloadFeedback = () => {\r\n//     if (!analysis) return;\r\n//     const file = new Blob([analysis], { type: \"text/plain\" });\r\n//     const fileURL = URL.createObjectURL(file);\r\n//     const a = document.createElement(\"a\");\r\n//     a.href = fileURL;\r\n//     a.setAttribute(\"download\", \"AI_Feedback.txt\");\r\n//     a.click();\r\n//     URL.revokeObjectURL(fileURL);\r\n//   };\r\n\r\n//   const handleGenerateCoverLetter = async () => {\r\n//     if (!analysis) return;\r\n\r\n//     try {\r\n//       const coverLetterText = await generateCoverLetter(analysis);\r\n//       setCoverLetter(coverLetterText);\r\n//     } catch (error) {\r\n//       setCoverLetter(\"Failed to generate cover letter.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDownloadCoverLetter = () => {\r\n//     if (!coverLetter) return;\r\n//     const file = new Blob([coverLetter], { type: \"text/plain\" });\r\n//     const fileURL = URL.createObjectURL(file);\r\n//     const a = document.createElement(\"a\");\r\n//     a.href = fileURL;\r\n//     a.setAttribute(\"download\", \"AI_Cover_Letter.txt\");\r\n//     a.click();\r\n//     URL.revokeObjectURL(fileURL);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n//       <form onSubmit={(e) => e.preventDefault()}>\r\n//         <h1 className=\"text-2xl font-bold mb-4\">Upload Your Resume</h1>\r\n//         <input\r\n//           type=\"file\"\r\n//           accept=\".pdf,.doc,.docx\"\r\n//           className=\"mb-4 p-2 border rounded\"\r\n//           onChange={handleFileChange}\r\n//         />\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={handleUpload}\r\n//           className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n//           disabled={loading}\r\n//         >\r\n//           {loading ? \"Analyzing...\" : \"Upload\"}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {loading && (\r\n//         <div className=\"flex justify-center items-center mt-3\">\r\n//           <ClipLoader color=\"#3498db\" loading={loading} size={40} />\r\n//         </div>\r\n//       )}\r\n\r\n//       {message && <p className=\"mt-4\"> {message} </p>}\r\n\r\n//       {analysis && (\r\n//         <div className=\"mt-6 p-4 bg-blue-100 shadow rounded max-w-screen\">\r\n//           <h2 className=\"text-lg font-bold\">AI Feedback</h2>\r\n//           <ReactMarkdown className=\"text-sm\">{analysis}</ReactMarkdown>\r\n//           <button onClick={handleDownloadFeedback} className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded\">\r\n//             Download Feedback\r\n//           </button>\r\n//           <button onClick={handleGenerateCoverLetter} className=\"mt-2 ml-2 px-4 py-2 bg-purple-500 text-white rounded\">\r\n//             Generate Cover Letter\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {coverLetter && (\r\n//         <div className=\"mt-6 p-4 bg-green-100 shadow rounded max-w-screen\">\r\n//           <h2 className=\"text-lg font-bold\">Generated Cover Letter</h2>\r\n//           <ReactMarkdown className=\"text-sm\">{coverLetter}</ReactMarkdown>\r\n//           <button onClick={handleDownloadCoverLetter} className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded\">\r\n//             Download Cover Letter\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport { useState } from \"react\";\r\nimport { uploadResume, analyzeResume } from \"../../utils/api\";\r\nimport \"../../styles/globals.css\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport CoverLetter from \"../components/CoverLetter\"; // ✅ Import CoverLetter component\r\n\r\nexport default function Upload() {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [analysis, setAnalysis] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setMessage(\"Please Select a File First\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n    setFileUrl(\"\");\r\n    setAnalysis(\"\");\r\n\r\n    try {\r\n      const response = await uploadResume(file);\r\n      setMessage(response.message);\r\n      console.log(\"File Uploaded Successfully:\", response);\r\n\r\n      if (response.fileUrl) setFileUrl(response.fileUrl);\r\n\r\n      if (response.extractedText) {\r\n        const aiFeedback = await analyzeResume(response.extractedText);\r\n        setAnalysis(aiFeedback);\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Upload Failed. Please Try Again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownloadFeedback = () => {\r\n    if (!analysis) return;\r\n    const file = new Blob([analysis], { type: \"text/plain\" });\r\n    const fileURL = URL.createObjectURL(file);\r\n    const a = document.createElement(\"a\");\r\n    a.href = fileURL;\r\n    a.setAttribute(\"download\", \"AI_Feedback.txt\");\r\n    a.click();\r\n    URL.revokeObjectURL(fileURL);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <h1 className=\"text-2xl font-bold mb-4\">Upload Your Resume</h1>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".pdf,.doc,.docx\"\r\n          className=\"mb-4 p-2 border rounded\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleUpload}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Analyzing...\" : \"Upload\"}\r\n        </button>\r\n      </form>\r\n\r\n      {loading && (\r\n        <div className=\"flex justify-center items-center mt-3\">\r\n          <ClipLoader color=\"#3498db\" loading={loading} size={40} />\r\n        </div>\r\n      )}\r\n\r\n      {message && <p className=\"mt-4\"> {message} </p>}\r\n\r\n      {analysis && (\r\n        <div className=\"mt-6 p-4 bg-blue-100 shadow rounded max-w-screen\">\r\n          <h2 className=\"text-lg font-bold\">AI Feedback</h2>\r\n          <ReactMarkdown className=\"text-sm\">{analysis}</ReactMarkdown>\r\n          <button\r\n            onClick={handleDownloadFeedback}\r\n            className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded\"\r\n          >\r\n            Download Feedback\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* ✅ Use CoverLetter Component Here */}\r\n      {analysis && <CoverLetter analysis={analysis} />}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}